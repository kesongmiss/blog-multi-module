<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenero.blog.mapper.user.BlogUserMapper">
  <resultMap id="BaseResultMap" type="com.tenero.blog.entity.user.BlogUser">
    <!--@mbg.generated-->
    <!--@Table blog_user-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="passWord" jdbcType="VARCHAR" property="password" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="headPortrait" jdbcType="VARCHAR" property="headportrait" />
    <result column="synopsis" jdbcType="VARCHAR" property="synopsis" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
    <result column="phoneNumber" jdbcType="INTEGER" property="phonenumber" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, userName, `passWord`, nickName, sex, headPortrait, synopsis, createTime, updateTime, 
    `status`, mailbox, phoneNumber, address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from blog_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from blog_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tenero.blog.entity.user.BlogUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into blog_user (userName, `passWord`, nickName, 
      sex, headPortrait, synopsis, 
      createTime, updateTime, `status`, 
      mailbox, phoneNumber, address
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{headportrait,jdbcType=VARCHAR}, #{synopsis,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{mailbox,jdbcType=VARCHAR}, #{phonenumber,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tenero.blog.entity.user.BlogUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into blog_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        `passWord`,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="headportrait != null">
        headPortrait,
      </if>
      <if test="synopsis != null">
        synopsis,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="mailbox != null">
        mailbox,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="headportrait != null">
        #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null">
        #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tenero.blog.entity.user.BlogUser">
    <!--@mbg.generated-->
    update blog_user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `passWord` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="headportrait != null">
        headPortrait = #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null">
        synopsis = #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="mailbox != null">
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tenero.blog.entity.user.BlogUser">
    <!--@mbg.generated-->
    update blog_user
    set userName = #{username,jdbcType=VARCHAR},
      `passWord` = #{password,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      headPortrait = #{headportrait,jdbcType=VARCHAR},
      synopsis = #{synopsis,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryByUserName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from blog_user
    where userName = #{username,jdbcType=VARCHAR}
  </select>
    <select id="queryByUserEmail" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from blog_user
      where mailbox = #{username,jdbcType=VARCHAR}
    </select>
    <select id="queryRoleByUserName" resultType="java.lang.Integer">
      select
      t2.roleId
      from blog_user t1,blog_user_role t2
      where
      t1.userName = #{username,jdbcType=VARCHAR} and
      t1.id = t2.userId
    </select>
  <select id="queryPermissionsByRole" resultType="java.lang.String">
    select
    t2.resourcesMethod
    from blog_role_resource t1, blog_resource t2
    where t1.roleId = #{roleid,jdbcType=INTEGER}
    and t1.resourceId = t2.id
    and t2.status = 1
  </select>

</mapper>